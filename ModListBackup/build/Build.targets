<?xml version="1.0" encoding="UTF-8"?>
<Project DefaultTargets="Start" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- Import Files -->
    <Import Project="tasks\FindRimWorld.tasks" />
    <Import Project="tasks\ReadAssemblyVersion.tasks" />
    <Import Project="tasks\ZipDirectory.tasks" />
    <Import Project="Build.config" />

  <ItemGroup>
      <Reference Include="Assembly-CSharp">
        <HintPath>lib/Assembly-CSharp.dll</HintPath>
        <Private>False</Private>
      </Reference>
      <Reference Include="Assembly-CSharp-firstpass">
        <HintPath>lib/Assembly-CSharp-firstpass.dll</HintPath>
        <Private>False</Private>
      </Reference>
      <Reference Include="UnityEngine">
        <HintPath>lib/UnityEngine.dll</HintPath>
        <Private>False</Private>
      </Reference>
    </ItemGroup>

  <!-- Entry Point -->
  <Target Name="Start" BeforeTargets="BeforeBuild">
    <Message Text="Preparing for $(OS) build..." Importance="high" Condition="!$(SilentMode)"/>

    <!-- Tries to find if RimWorld is installed, and its location -->
    <FindRimWorld Condition="'$(RimWorldInstall)' == ''">
      <Output TaskParameter="RimWorldInstall" PropertyName="RimWorldInstall" />
      <Output TaskParameter="IsInstalled" PropertyName="RimWorldIsInstalled" />
    </FindRimWorld>

    <ReadAssemblyVersion AssemblyInfoFile="$(MSBuildProjectDirectory)\Properties\AssemblyInfo.cs">
      <Output TaskParameter="MajorVersion" PropertyName="AssemblyVersionMajor" />
      <Output TaskParameter="MinorVersion" PropertyName="AssemblyVersionMinor" />
      <Output TaskParameter="BuildVersion" PropertyName="AssemblyVersionBuild" />
      <Output TaskParameter="RevisionVersion" PropertyName="AssemblyVersionRevision" /> 
    </ReadAssemblyVersion>

    <!-- Set up some platform dependent properties -->
    <PropertyGroup Condition=" '$(OS)' == 'Windows_NT' ">
      <RimWorldDataPath>$(RimWorldInstall)\RimWorldWin_Data\Managed</RimWorldDataPath>
      <CopyCommand>xcopy /I /E /Y</CopyCommand>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(OS)' != 'Windows_NT' ">
      <RimWorldDataPath>$(RimWorldInstall)\RimWorldLinux_Data\Managed</RimWorldDataPath>
      <CopyCommand>cp -rT</CopyCommand>
      <DeleteCommand>rm -rf</DeleteCommand>
    </PropertyGroup>
  </Target>

  <!-- Ouput the build tasks will be performed and some other info -->
  <Target Name="OutputConfigInfo" AfterTargets="Start" BeforeTargets="CopyRimWorldAssemblies" Condition="!$(SilentMode)">
    <Message Text="Found RimWorld installed in '$(RimWorldInstall)'" Importance="high" Condition="'$(RimWorldIsInstalled)'" />
    <Message Text="Config:" Importance="high" />
    <Message Text="    -Install to RimWorld Mod Dir" Importance="high" Condition="$(InstallToRimWorldModDir)" />
    <Message Text="    -using reference Assembly-CSharp" Importance="high" Condition="$(UseDLLAssembly_CSharp)" />
    <Message Text="    -using reference Assembly-CSharp-firstpass" Importance="high" Condition="$(UseDLLAssembly_CSharp_firstpass)" />
    <Message Text="    -using reference UnityEngine" Importance="high" Condition="$(UseDLLUnityEngine)" />
  </Target>

  <Target Name="CopyRimWorldAssemblies" AfterTargets="Start" Condition="$(RimWorldIsInstalled)">
    <ItemGroup>
      <RimWorldReferenceFiles Include="$(RimWorldDataPath)\Assembly-CSharp.dll" Condition="$(UseDLLAssembly_CSharp)">
      </RimWorldReferenceFiles>
      <RimWorldReferenceFiles Include="$(RimWorldDataPath)\Assembly-CSharp-firstpass.dll" Condition="$(UseDLLAssembly_CSharp_firstpass)">
      </RimWorldReferenceFiles>
      <RimWorldReferenceFiles Include="$(RimWorldDataPath)\UnityEngine.dll" Condition="$(UseDLLUnityEngine)">
      </RimWorldReferenceFiles>
    </ItemGroup>
    <Copy SourceFiles="@(RimWorldReferenceFiles)" DestinationFolder="lib\" SkipUnchangedFiles="$(SkipUnchangedOnCopy)" >
      <Output TaskParameter="CopiedFiles" ItemName="CopiedFiles" />
    </Copy>
    
      <Message Text="Copied @(CopiedFiles->Count()) reference file(s)" Importance="high" />
  </Target>

  <Target Name="InstallToRimWorld" AfterTargets="AfterBuild" BeforeTargets="ZipOutputOnDebug;ZipOutputOnRelease" Condition="$(InstallToRimWorldModDir)" >
    <!-- RimWorld is NOT installed -->
    <Message Text="RimWorld not found, skipping install" Importance="high" Condition="!$(RimWorldIsInstalled)" />
    <Message Text="If it is installed, check the path exists in 'RimWorldLocations.txt'" Importance="high" Condition="'!$(RimWorldIsInstalled)'" />
    <!-- RimWorld IS installed -->
    <Exec Command='$(CopyCommand) "$(ProjectDir)Output\$(MSBuildProjectName)" "$(RimWorldInstall)\Mods\$(MSBuildProjectName)"' ConsoleToMSBuild="true" Condition="'$(RimWorldIsInstalled)'" />
    <Message Text="Installed $(MSBuildProjectName) v$(AssemblyVersionMajor).$(AssemblyVersionMinor).$(AssemblyVersionBuild).$(AssemblyVersionRevision)" Importance="high" Condition="'$(RimWorldIsInstalled)'" />
  </Target>

  <Target Name="ZipOutput" AfterTargets="AfterBuild" Condition="($(ZipOutputOnDebug) AND $(Configuration) == 'DEBUG') OR ($(ZipOutputOnRelease) AND $(Configuration) == 'RELEASE')">
    <PropertyGroup>
      <ZipFileName>$(MSBuildProjectName)-v$(AssemblyVersionMajor).$(AssemblyVersionMinor)-$(Configuration)</ZipFileName>
    </PropertyGroup>
        <Message Text="Creating Zip in Output '$(ZipFileName)'" Importance="high" />
    <ZipDirectory ZipFileName="$(MSBuildProjectDirectory)\Output\$(ZipFileName)" DirectoryName="$(MSBuildProjectDirectory)\Output\$(MSBuildProjectName)" />
    
  </Target>
  
</Project>
